33 42
META script_type_update
META script_execution_waiting

/// Constants
CONST LIST messageProtocols = fe3d:server_get_pending_protocols()
CONST LIST messageUsernames = fe3d:server_get_pending_usernames()
CONST LIST messageContents = fe3d:server_get_pending_contents()
CONST INT maxIndex = misc:list_size("messageContents")

/// Non-constants
LIST contentParts = {}
STR log = ""
STR protocol = ""
STR username = ""
STR content = ""
INT index = 0
INT userIndex = 0
INT contentSize = 0
BOOL contains = <false>

/// Receive network messages
LOOP:
    IF index IS maxIndex:
        BREAK
    /// Extract message data
    EDIT protocol = messageProtocols[index]
    EDIT username = messageUsernames[index]
    EDIT content = messageContents[index]
    EDIT contentSize = misc:string_get_size(content)
    /// Check if message is valid
    EDIT contains = misc:string_contains(content, ":")
    IF contains IS <true>:
        EDIT contentParts = misc:string_split(content, ":")
        IF contentParts[0] IS "server":
            IF contentParts[1] IS "ready":
                EDIT userIndex = misc:list_index("_usernames", username)
                EDIT _readyStatus[userIndex] = <true>
            ELIF contentParts[1] IS "hit":
                EDIT userIndex = misc:list_index("_usernames", contentParts[2])
                EDIT _livingStatus[userIndex] = <false>
                EDIT userIndex = misc:list_index("_usernames", username)
                INCR _kills[userIndex] 1
        ELIF contentParts[0] IS "forward":
            DECR contentSize 8
            EDIT content = misc:string_get_part(content, 8, contentSize)
            IF protocol IS "TCP":
                fe3d:server_broadcast_tcp_message(content, username)
            ELSE:
                fe3d:server_broadcast_udp_message(content, username)
        ELIF contentParts[0] IS "reject":
            DECR contentSize 7
            EDIT content = misc:string_get_part(content, 7, contentSize)
            IF protocol IS "TCP":
                fe3d:server_send_tcp_message(username, content)
            ELSE:
                fe3d:server_send_udp_message(username, content)
        ELSE:
            EDIT log = misc:string_concat("Unknown message type: ", content)
            fe3d:print(log)
    ELSE:
        EDIT log = misc:string_concat("Invalid message: ", content)
        fe3d:print(log)
    INCR index 1
